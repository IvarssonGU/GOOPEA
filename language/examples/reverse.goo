enum List = Nil, Cons(List, Int);

Int: List
build x = match x == 0 {
    True: Nil,
    False: Cons(build(x - 1), x)
};
    
(List, List): List
reverseHelper(list, acc) =
    match list {
        Nil: acc,
        Cons(xs, x): reverseHelper(xs, Cons(acc, x))
    };

List: List
reverseList list = reverseHelper(list, Nil);

List: Int
sum list = match list {
    Nil: 0,
    Cons(rest, value): value + sum(rest)
};

(): Int
main = sum(reverseList(build(100)));